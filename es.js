!function(){"use strict";let t=!0;const{filter:e}=[],n=new WeakMap,s=t=>{const{ownerDocument:{defaultView:e}}=t;return e.getComputedStyle(t)},i=(t,e)=>{const{ownerDocument:{defaultView:s}}=e;s[t+"EventListener"]("resize",n.get(e))},r=t=>-1!=s(t).gridColumnEnd,a=(t,e,s)=>{if(null!=s){const n="number"==typeof s?s+"px":s;t.style.setProperty(e,n)}else t.style.removeProperty(e);n.has(t)&&n.get(t)()};customElements.define("masonry-rows",class extends HTMLElement{static get observedAttributes(){return["gap","min-width"]}get gap(){return this.style.getPropertyValue("--gap")||".5em"}set gap(t){a(this,"--gap",t)}get items(){return e.call(this.children,r)}get minWidth(){return this.style.getPropertyValue("--min-width")||"20em"}set minWidth(t){a(this,"--min-width",t)}attributeChangedCallback(t,e,n){this["gap"===t?t:"minWidth"]=n}connectedCallback(){const{ownerDocument:e}=this;t&&(t=!1,e.head.appendChild(e.createElement("style")).textContent="@supports (display: grid) {\n        masonry-rows, .masonry-rows {\n          --gap: .5em;\n          --min-width: 20em;\n          --width: minmax(min(var(--min-width), 100%), 1fr);\n          box-sizing: inherit;\n          margin: 0;\n          display: grid;\n          grid-template-columns: repeat(auto-fit, var(--width));\n          grid-template-rows: masonry;\n          justify-content: center;\n          grid-gap: var(--gap);\n          padding: var(--gap);\n        }\n        masonry-rows > *, .masonry-rows > * { align-self: start }\n      }");let r=n.has(this);const{display:a,gridTemplateRows:o}=s(this);r||"grid"!==a||"masonry"===o||(r=!r,n.set(this,(()=>{let t=!1;const{gridRowGap:e,gridTemplateColumns:n}=s(this),i=n.split(/\s+/).length,{items:r}=this,{length:a}=r;for(let e=0;e<a;e++){const n=r[e],{height:s}=n.getBoundingClientRect();s!=n.dataset.height&&(n.dataset.height=s,t=!0)}if(t||this.dataset.columns!=i){this.dataset.columns=i;for(let t=0;t<a;t++)r[t].style.removeProperty("margin-top");if(1<i){const t=parseFloat(e);for(let e=i;e<a;e++){const{bottom:n}=r[e-i].getBoundingClientRect(),{top:s}=r[e].getBoundingClientRect();r[e].style.marginTop=n+t-s+"px"}}}})),new MutationObserver(n.get(this)).observe(this,{subtree:!0,childList:!0})),r&&(i("add",this),n.get(this)())}disconnectedCallback(){n.has(this)&&i("remove",this)}})}();
