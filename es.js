!function(){"use strict";let t=!0;const{filter:e}=[],i=new WeakMap,s=t=>{const{ownerDocument:{defaultView:e}}=t;return e.getComputedStyle(t)},n=(t,e)=>{const{ownerDocument:{defaultView:s}}=e;s[t+"EventListener"]("resize",i.get(e))},r=t=>-1!=s(t).gridColumnEnd,a=(t,e,s)=>{if(null!=s){const i="number"==typeof s?s+"px":s;t.style.setProperty(e,i)}else t.style.removeProperty(e);i.has(t)&&i.get(t)()};customElements.define("masonry-rows",class extends HTMLElement{static get observedAttributes(){return["gap","min-width"]}get gap(){return this.style.getPropertyValue("--gap")||".5em"}set gap(t){a(this,"--gap",t)}get items(){return e.call(this.children,r)}get minWidth(){return this.style.getPropertyValue("--min-width")||"20em"}set minWidth(t){a(this,"--min-width",t)}attributeChangedCallback(t,e,i){this["gap"===t?t:"minWidth"]=i}connectedCallback(){const{ownerDocument:e}=this;t&&(t=!1,e.head.appendChild(e.createElement("style")).textContent=["@supports(display:grid){","masonry-rows,.masonry-rows{","--gap:.5em;","--min-width:20em;","--width:minmax(min(var(--min-width),100%),1fr);","box-sizing:inherit;","margin:0;","display:grid;","grid-template-columns:repeat(auto-fit,var(--width));","grid-template-rows:masonry;","justify-content:center;","grid-gap:var(--gap);","padding:var(--gap)","}","masonry-rows>*,.masonry-rows>*{align-self:start}","}"].join(""));let r=i.has(this);const{display:a,gridTemplateRows:o}=s(this);r||"grid"!==a||"masonry"===o||(r=!r,i.set(this,(()=>{let t=!1;const{gridRowGap:e,gridTemplateColumns:i}=s(this),n=i.split(/\s+/).length,{dataset:r,items:a}=this,{length:o}=a;for(let e=0;e<o;e++){const i=a[e],{height:s}=i.getBoundingClientRect();s!=i.dataset.height&&(i.dataset.height=s,t=!0)}if(t||r.columns!=n){r.columns=n;for(let t=0;t<o;t++)a[t].style.removeProperty("margin-top");if(1<n){const t=parseFloat(e);for(let e=n;e<o;e++){const{bottom:i}=a[e-n].getBoundingClientRect(),{top:s}=a[e].getBoundingClientRect();a[e].style.marginTop=i+t-s+"px"}}}})),new MutationObserver(i.get(this)).observe(this,{subtree:!0,childList:!0})),r&&(n("add",this),i.get(this)())}disconnectedCallback(){i.has(this)&&n("remove",this)}})}();
